import numpy as np
import matplotlib.pyplot as plt

def differential_entropy(mu, sigma):
    """Compute the differential entropy of a Gaussian random variable."""
    return 0.5 * np.log(2 * np.pi * np.e * sigma**2)

def mutual_information(SNR):
    """Compute the mutual information I(X;Y) for a given SNR."""
    return 0.5 * np.log2(1 + SNR)

def simulate_gaussian_channel(SNR_values):
    """Compute channel capacity over a range of SNR values."""
    return [mutual_information(snr) for snr in SNR_values]

# Define SNR range (linear scale)
SNR_dB = np.linspace(-10, 30, 100)  # SNR in dB
SNR_linear = 10**(SNR_dB / 10)  # Convert to linear scale

# Compute channel capacity
capacities = simulate_gaussian_channel(SNR_linear)

# Plot Capacity vs. SNR
plt.figure(figsize=(8, 5))
plt.plot(SNR_dB, capacities, label='Channel Capacity', color='b')
plt.xlabel('SNR (dB)')
plt.ylabel('Capacity (bits per channel use)')
plt.title('Channel Capacity vs. SNR')
plt.legend()
plt.grid()
plt.show()

# Example usage
mu, sigma = 0, 1  # Example parameters for a Gaussian variable
entropy = differential_entropy(mu, sigma)
print(f"Differential Entropy: {entropy:.4f} bits")
